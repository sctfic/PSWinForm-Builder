{
	// Place your snippets for powershell here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.

	"Form": {
		"prefix": "form",
		"body": [
			"@{  ControlType = 'Form'",
			"    # Name            = 'MainForm'",
			"    Size            = '360, 480'",
			"    Text            = 'MyForm'",
			"    TopMost         = \\$true",
			"    Anchor          = 'Right,Top'",
			"    AutoSize        = \\$False",
			"    MaximizeBox     = \\$False",
			"    MinimizeBox     = \\$False",
			"    ControlBox      = \\$True # $True or $False to show close icon on top right corner",
			"    FormBorderStyle = 'FixedSingle' # Fixed3D, FixedDialog, FixedSingle, Sizable, None, FixedToolWindow, SizableToolWindow",
			"    KeyPreview      = \\$true",
			"    Icon            = [System.Drawing.Icon] [System.IO.MemoryStream] [System.Convert]::FromBase64String('')",
			"    Events      = @{",
			"        Load    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Load'",
			"            if (-not ('Console.Window' -as [type])) {",
			"                Add-Type -Name Window -Namespace Console -MemberDefinition '[DllImport(\"Kernel32.dll\")]public static extern IntPtr GetConsoleWindow();[DllImport(\"user32.dll\")]public static extern bool ShowWindow(IntPtr hWnd, Int32 nCmdShow);'",
			"            }",
			"            \\$Script:consolePtr = [Console.Window]::GetConsoleWindow()",
			"            if (!\\$PSCmdlet.MyInvocation.BoundParameters['Verbose'].IsPresent) {",
            "                [Console.Window]::ShowWindow(\\$Script:consolePtr,0) | Out-Null",
            "            }",
			"        }",
			"        Activated = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Activated'",
			"        }",
			"        KeyDown = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'KeyDown'",
			"            if (\\$_.KeyCode -eq 'Escape') {",
			"                \\$this.Close()",
			"            }",
			"        }",
			"        Closing = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Closing'",
            "            if (\\$Script:consolePtr) {",
			"                [Console.Window]::ShowWindow(\\$Script:consolePtr,5) | Out-Null",
			"            }",
			"        }",
			"    }",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"    )",
			"}"
		],
		"description": "WinForm structure for descriptor file WinForms.psd1"
	},
	"TabControl": {
		"prefix": "TabControl",
		"body": [
			"@{  ControlType = 'TabControl'",
			"    Dock        = 'Fill'",
			"    Events      = @{",
			"        SelectedIndexChanged = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'SelectedIndexChanged'",
			"            switch (\\$this.SelectedTab.Name) {",
			"                'Tab1' {",
			"                }",
			"                'Tab2' {",
			"                }",
			"                default {}",
			"            }",
			"        }",
			"    }",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"        @{  ControlType = 'TabPage'",
			"            Name        = 'Tab1'",
			"            Text        = '${2:Tab1}'",
			"            Dock        = 'Fill'",
			"            Events      = @{}",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        },",
			"        @{  ControlType = 'TabPage'",
			"            Name        = 'Tab2'",
			"            Text        = '${3:Tab2}'",
			"            Dock        = 'Fill'",
			"            Events      = @{}",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        }",
			"    )",
			"}"
		],
		"description": "TabControl structure for descriptor file WinForms.psd1"
	},
	"TabPage": {
		"prefix": "TabPage",
		"body": [
			"@{  ControlType = 'TabPage'",
			"    # Name        = 'TabPage'",
			"    Text        = '${1:Tab}'",
			"    Dock        = 'Fill'",
			"    Events      = @{",
			"        VisibleChanged    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'VisibleChanged'",
			"        }",
			"    }",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"    )",
			"}"
		],
		"description": "TabPage structure for descriptor file WinForms.psd1"
	},
	"TreeView": {
		"prefix": "TreeView",
		"body": [
			"@{  ControlType = 'TreeView'",
			"    # Name        = 'TreeView'",
			"    Dock        = 'Fill'",
			"    ShowNodeToolTips = \\$true",
			"    Events      = @{",
			"        BeforeExpand    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'BeforeExpand'",
			"        }",
			"        DoubleClick    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'DoubleClick'",
			"        }",
			"    }",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"    )",
			"}"
		],
		"description": "TreeView structure for descriptor file WinForms.psd1"
	},
	"ListView": {
		"prefix": "ListView",
		"body": [
			"@{  ControlType = 'ListView'",
			"    Name             = 'ListView_${1:label}'",
			"    Dock             = 'Fill'",
			"    # Activation       = 'OneClick'",
			"    FullRowSelect    = \\$True",
			"    # HoverSelection   = \\$True",
			"    ShowGroups       = \\$True",
			"    ShowItemToolTips = \\$True",
			"    View             = 'Details'",
			"    Events      = @{",
			"        Enter    = @{ # Event",
			"            Type = 'Thread'",
			"            ScriptBlock = [Scriptblock]{",
			"                param(\\$ControlHandler, \\$ControllerName, \\$EventName)",
			"                \\$Tabs = \\$ControlHandler['TabsRessources']",
			"                \\$ListView = \\$(\\$ControlHandler[\"\\$(\\$Tabs.SelectedTab.Name)_LV\"])",
			"                if (!\\$listview.tag -or (get-date \\$listview.tag) -lt (get-date).AddMinutes(-1)) {",
			"                    \\$listview.tag = \\$(Get-Date)",
			"                    Invoke-EventTracer \\$Tabs.SelectedTab.Name \\$EventName",
			"                    \\$ListView.Items.Clear()",
			"                            [PSCustomObject]@{",
			"                                FirstColValue = (Get-Random 100)",
			"                                NextValues = (Get-Random 'Value1', 'Value2', 'Value0','Value3'),(Get-Random 'Value1', 'Value2', 'Value0','Value3')",
			"                                Group   = (Get-Random 'Grp1', 'Grp2', 'Grp0','')",
			"                                Caption = 'Caption infos'",
			"                                Status  = (Get-Random 'Warn', 'Info', 'Title','')",
			"                                Shadow  = (Get-Random \\$true, \\$false) # gris clair",
			"                            } | Update-ListView -listView \\$ListView",
			"                }",
			"            }",
			"        }",
			"        ColumnClick    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'ColumnClick'",
			"            Set-ListViewSorted  -listView \\$this -column \\$_.Column",
			"        }",
			"        Click    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Click' # left and right but not on empty area",
			"        }",
			"        DoubleClick    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'DoubleClick'",
			"        }",
			"    }",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"        @{  Text        = 'Col1'",
			"            ControlType = 'ColumnHeader'",
			"            Width        = 140",
			"        },",
			"        @{  Text        = 'Col2'",
			"            ControlType = 'ColumnHeader'",
			"            Width        = 120",
			"        }",
			"        @{  Text        = 'Col3'",
			"            ControlType = 'ColumnHeader'",
			"            Width        = 150",
			"        }",
			"    )",
			"}"
		],
		"description": "ListView structure for descriptor file WinForms.psd1"
	},
	"DataGridView": {
		"prefix": "DataGridView",
		"body": [
			"@{  ControlType = 'DataGridView'",
			"    Name             = 'DataGridView_${1:label}'",
			"    Dock             = 'Fill'",
			"    ReadOnly         = \\$True",
			"    CellBorderStyle  = 'SingleHorizontal'",
			"    SelectionMode    = 'FullRowSelect'",
			"    RowHeadersVisible = \\$False",
			"    AllowUserToAddRows = \\$False",
			"    AllowUserToDeleteRows = \\$False",
            "    RowTemplate      = [System.Windows.Forms.DataGridViewRow]@{Height = 20}",
            "    AlternatingRowsDefaultCellStyle = [System.Windows.Forms.DataGridViewCellStyle]@{BackColor='AliceBlue'}",
			"    Events      = @{",
			"        Enter    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Enter'",
			"        }",
			"        Click    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Click' # left and right but not on empty area",
			"        }",
			"        DoubleClick    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'DoubleClick'",
			"        }",
			"    }",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"        @{  HeaderText  = 'Name'",
			"            ControlType = 'DataGridViewButtonColumn'",
			"            Width       = 120",
			"        },",
			"        @{  HeaderText  = 'Col2'",
			"            ControlType = 'DataGridViewCheckBoxColumn'",
			"            Width       = 20",
			"        },",
			"        @{  HeaderText  = 'Col3'",
			"            ControlType = 'DataGridViewComboBoxColumn'",
			"            Width       = 120",
			"        },",
			"        @{  HeaderText  = 'Col4'",
			"            ControlType = 'DataGridViewImageColumn'",
			"            Width       = 60",
			"        },",
			"        @{  HeaderText  = 'Col5'",
			"            ControlType = 'DataGridViewLinkColumn'",
			"            Width       = 120",
			"        },",
			"        @{  HeaderText  = 'Col6'",
			"            ControlType = 'DataGridViewTextBoxColumn'",
			"            Width       = 80",
			"        }",
			"    )",
			"}"
		],
		"description": "DataGridView structure for descriptor file WinForms.psd1"
	},
	"DataGridViewButtonColumn": {
		"prefix": "DataGridViewButtonColumn",
		"body": [
			"@{  ControlType = 'DataGridViewButtonColumn'",
			"    HeaderText        = '${1:label}'",
			"    Width       = 80",
			"}"
		],
		"description": "DataGridViewButtonColumn structure for descriptor file WinForms.psd1"
	},
	"DataGridViewCheckBoxColumn": {
		"prefix": "DataGridViewCheckBoxColumn",
		"body": [
			"@{  ControlType = 'DataGridViewCheckBoxColumn'",
			"    HeaderText        = '${1:label}'",
			"    Width       = 80",
			"}"
		],
		"description": "DataGridViewCheckBoxColumn structure for descriptor file WinForms.psd1"
	},
	"DataGridViewComboBoxColumn": {
		"prefix": "DataGridViewComboBoxColumn",
		"body": [
			"@{  ControlType = 'DataGridViewComboBoxColumn'",
			"    HeaderText        = '${1:label}'",
			"    Width       = 80",
			"}"
		],
		"description": "DataGridViewComboBoxColumn structure for descriptor file WinForms.psd1"
	},
	"DataGridViewImageColumn": {
		"prefix": "DataGridViewImageColumn",
		"body": [
			"@{  ControlType = 'DataGridViewImageColumn'",
			"    HeaderText        = '${1:label}'",
			"    Width       = 80",
			"}"
		],
		"description": "DataGridViewImageColumn structure for descriptor file WinForms.psd1"
	},
	"DataGridViewLinkColumn": {
		"prefix": "DataGridViewLinkColumn",
		"body": [
			"@{  ControlType = 'DataGridViewLinkColumn'",
			"    HeaderText        = '${1:label}'",
			"    Width       = 80",
			"}"
		],
		"description": "DataGridViewLinkColumn structure for descriptor file WinForms.psd1"
	},
	"DataGridViewTextBoxColumn": {
		"prefix": "DataGridViewTextBoxColumn",
		"body": [
			"@{  ControlType = 'DataGridViewTextBoxColumn'",
			"    HeaderText        = '${1:label}'",
			"    Width       = 80",
			"}"
		],
		"description": "DataGridViewTextBoxColumn structure for descriptor file WinForms.psd1"
	},
	"MenuStrip": {
		"prefix": "MenuStrip",
		"body": [
			"@{  ControlType = 'MenuStrip' # Main Top menu need last child",
			"    Dock        = 'Top'",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"        @{",
			"            ControlType = 'ToolStripMenuItem'",
			"            # Name        = 'ToolStripMenuItem'",
			"            Text        = '${2:item1}'",
			"            Events      = @{",
			"                Click    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'Click'",
			"                }",
			"            }",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        },",
			"        @{",
			"            ControlType = 'ToolStripMenuItem'",
			"            # Name        = 'ToolStripMenuItem'",
			"            Text        = '${3:item2}'",
			"            Events      = @{",
			"                Click    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'Click'",
			"                }",
			"            }",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        }",
			"    )",
			"}"
		],
		"description": "MenuStrip structure for descriptor file WinForms.psd1"
	},
	"ToolStripMenuItem": {
		"prefix": "ToolStripMenuItem",
		"body": [
			"@{  ControlType = 'ToolStripMenuItem'",
			"    # Name        = 'ToolStripMenuItem'",
			"    ShortcutKeys = 'Ctrl+S'",
			"    ShortcutKeyDisplayString = 'Ctrl+S'",
			"    Text        = '${1:label}'",
			"    Events      = @{",
			"        Click    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Click'",
			"        }",
			"    }",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"        @{",
			"            ControlType = 'ToolStripMenuItem'",
			"            # Name        = 'ToolStripMenuItem'",
			"            ShortcutKeys = 'Ctrl+X'",
			"            ShortcutKeyDisplayString = 'Ctrl+X'",
			"            Text        = '${2:item1}'",
			"            Events      = @{",
			"                Click    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'Click'",
			"                }",
			"            }",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        },",
			"        @{",
			"            ControlType = 'ToolStripMenuItem'",
			"            # Name        = 'ToolStripMenuItem'",
			"            ShortcutKeys = 'Ctrl+S'",
			"            ShortcutKeyDisplayString = 'Ctrl+S'",
			"            Text        = '${2:item2}'",
			"            Events      = @{",
			"                Click    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'Click'",
			"                }",
			"            }",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        }",
			"    )",
			"}"
		],
		"description": "ToolStripMenuItem structure for descriptor file WinForms.psd1"
	},
	"ToolStripSeparator": {
		"prefix": "ToolStripSeparator",
		"body": [
			"@{  ControlType = 'ToolStripSeparator'",
			"}"
		],
		"description": "ToolStripSeparator structure for descriptor file WinForms.psd1"
	},
	"ContextMenuStrip": {
		"prefix": "ContextMenuStrip",
		"body": [
			"@{  ControlType = 'ContextMenuStrip'",
			"    # Name        = 'ContextMenuStrip_${1:MainContext}'",
			"    Events      = @{",
			"        Enter    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Enter'",
			"        }",
			"    }",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"        @{",
			"            ControlType = 'ToolStripMenuItem'",
			"            ShortcutKeys = 'Ctrl+X'",
			"            ShortcutKeyDisplayString = 'Ctrl+X'",
			"            Text        = '${2:ContexItem1}'",
			"            Events      = @{",
			"                Click    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'Click'",
			"                }",
			"            }",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        },",
			"        @{",
			"            ControlType = 'ToolStripSeparator'",
			"        },",
			"        @{",
			"            ControlType = 'ToolStripMenuItem'",
			"            ShortcutKeys = 'Ctrl+X'",
			"            ShortcutKeyDisplayString = 'Ctrl+X'",
			"            Text        = '${1:item2}'",
			"            Events      = @{",
			"                Click    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'Click'",
			"                }",
			"            }",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        }",
			"    )",
			"}"
		],
		"description": "ContextMenuStrip structure for descriptor file WinForms.psd1"
	},
	"SplitContainer": {
		"prefix": "SplitContainer",
		"body": [
			"@{  ControlType = 'SplitContainer'",
			"    Dock        = 'Fill'",
			"    Orientation = 'Vertical' # Vertical = 1 Left and 1 Right",
			"    Events      = @{",
			"        Enter    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Enter'",
			"        }",
			"    }",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"        @{",
			"            ControlType = 'SplitterPanel'",
			"            Events      = @{",
			"                Click    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'Click'",
			"                }",
			"            }",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        },",
			"        @{",
			"            ControlType = 'SplitterPanel'",
			"            Events      = @{",
			"                Click    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'Click'",
			"                }",
			"            }",
			"            Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"            )",
			"        }",
			"    )",
			"}"
		],
		"description": "SplitContainer structure for descriptor file WinForms.psd1"
	},
	"Splitter": {
		"prefix": "Splitter",
		"body": [
			"@{  ControlType = 'Splitter'",
			"    Dock        = 'Right' # ",
			"    Events      = @{",
			"        Enter    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Enter'",
			"        }",
			"    }",
			"}"
		],
		"description": "Splitter structure for descriptor file WinForms.psd1"
	},
	"Checkbox": {
		"prefix": "Checkbox",
		"body": [
			"@{  ControlType = 'Checkbox'",
			"    Name        = 'Checkbox_${1:label}'",
			"    Text        = '${1:label}'",
			"    Dock        = 'Top'",
			"    Checked     = \\$True",
			"    Events      = @{",
			"        CheckedChanged    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'CheckedChanged'",
			"        }",
			"    }",
			"}"
		],
		"description": "Checkbox structure for descriptor file WinForms.psd1"
	},
	"RichTextBox": {
		"prefix": "RichTextBox",
		"body": [
			"@{  ControlType = 'RichTextBox'",
			"    Name        = 'RichTextBox_${1:label}'",
			"    Text        = '${1:label}'",
			"    Dock        = 'Top'",
			"    Events      = @{",
			"        DoubleClick    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'DoubleClick'",
			"        }",
			"    }",
			"}"
		],
		"description": "RichTextBox structure for descriptor file WinForms.psd1"
	},
	"GroupBox": {
		"prefix": "GroupBox",
		"body": [
			"@{  ControlType = 'GroupBox'",
			"    Text        = '${1:label}'",
			"    Dock        = 'Fill'",
			"    Events      = @{}",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"    )",
			"}"
		],
		"description": "GroupBox structure for descriptor file WinForms.psd1"
	},
	"Panel": {
		"prefix": "Panel",
		"body": [
			"@{  ControlType = 'Panel'",
			"    Dock        = 'Fill'",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"    )",
			"}"
		],
		"description": "Panel structure for descriptor file WinForms.psd1"
	},
	"RadioButton": {
		"prefix": "RadioButton",
		"body": [
			"@{  ControlType = 'RadioButton'",
			"    Name        = 'RadioButton_${1:label}'",
			"    Text        = '${1:label}'",
			"    Dock        = 'Top'",
			"    Events      = @{",
			"        CheckedChanged    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'CheckedChanged'",
			"        }",
			"    }",
			"}"
		],
		"description": "RadioButton structure for descriptor file WinForms.psd1"
	},
	"TextBox": {
		"prefix": "TextBox",
		"body": [
			"@{  ControlType = 'Panel'",
			"    Dock        = 'Top'",
			"    Events      = @{}",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"        @{  ControlType = 'Label'",
			"            Text        = '${1:label}'",
			"            Dock        = 'Fill'",
			"        },",
			"        @{  ControlType = 'TextBox'",
			"            Name        = 'TextBox_${1:label}'",
			"            Dock        = 'Right'",
			"            Events      = @{",
			"                TextChanged    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'TextChanged'",
			"                }",
			"            }",
			"        }",
			"    )",
			"}"
		],
		"description": "TextBox structure for descriptor file WinForms.psd1"
	},
	"Button": {
		"prefix": "Button",
		"body": [
			"@{  ControlType = 'Button'",
			"    Name        = 'Button_${1:label}'",
			"    Text        = '${1:label}'",
			"    Dock        = 'Bottom'",
			"    Events      = @{",
			"        Click    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Click'",
			"        }",
			"    }",
			"}"
		],
		"description": "Button structure for descriptor file WinForms.psd1"
	},
	"ComboBox": {
		"prefix": "ComboBox",
		"body": [
			"@{  ControlType = 'Panel'",
			"    Dock        = 'Top'",
			"    Events      = @{}",
			"    Childrens   = @( # FirstControl need {Dock = 'Fill'} but the following will be [Top, Bottom, Left, Right]",
			"        @{  ControlType = 'Label'",
			"            Text        = '${1:label}'",
			"            Dock        = 'Fill'",
			"        },",
			"        @{  ControlType = 'ComboBox'",
			"            Name        = 'ComboBox_${1:label}'",
			"            Dock        = 'Right'",
			"            Text        = '${1:label}' # default text => no value, itemIndex -1",
			"            Items       = @('un','deux','trois')",
			"            Events      = @{",
			"                SelectionChanged    = [Scriptblock]{ # Event",
			"                    Invoke-EventTracer \\$this 'TextChanged'",
			"                }",
			"            }",
			"        }",
			"    )",
			"}"
		],
		"description": "ComboBox structure for descriptor file WinForms.psd1"
	},
	"ListBox": {
		"prefix": "ListBox",
		"body": [
			"@{  ControlType = 'ListBox'",
			"    Name        = 'ListBox_${1:label}'",
			"    Text        = '${1:label}'",
			"    Dock        = 'Bottom'",
			"    Items       = @('un','deux','trois')",
			"    Events      = @{",
			"        Click    = [Scriptblock]{ # Event",
			"            Invoke-EventTracer \\$this 'Click'",
			"        }",
			"    }",
			"}"
		],
		"description": "ListBox structure for descriptor file WinForms.psd1"
	},
	"ProgressBar": {
		"prefix": "ProgressBar",
		"body": [
			"@{  ControlType = 'ProgressBar'",
			"    Name        = 'ProgressBar_${1:label}'",
			"    Style       = 'Marquee'",
			"    Dock        = 'Top'",
			"    Height      = 5",
			"}"
		],
		"description": "ProgressBar structure for descriptor file WinForms.psd1"
	},
	"ScriptBlock": {
		"prefix": "ScriptBlock-Event",
		"body": [
			"[ScriptBlock]{",
			"    Invoke-EventTracer \\$this '${1:EventType}'",
			"    start-threadJob -Name \"PSWinForm_\\$${1:EventType}\" -InitializationScript {Import-Module PSBright -function ping} {",
			"        param(\\$IP,\\$Ports)",
			"        Ping $IP -ports $Ports | Out-GridView",
			"    } -ArgumentList @('8.8.8.8',@(0,53))",
			"}"
		],
		"description": "ScriptBlock with anonymous Thread structure for descriptor file WinForms.psd1"
	},
	"Thread": {
		"prefix": "Thread-Event",
		"body": [
			"@{",
			"    Type = 'Thread'",
			"    ScriptBlock = [ScriptBlock]{",
			"        param(\\$ControlHandler, \\$ControllerName, \\$EventName)",
			"        \\$ThisMe = \\$ControlHandler[\\$ControllerName]",
			"        Invoke-EventTracer \\$ThisMe $EventName",
			"        ",
			"    }",
			"}"
		],
		"description": "Thread interacts with form, structure for descriptor file WinForms.psd1"
	}
}